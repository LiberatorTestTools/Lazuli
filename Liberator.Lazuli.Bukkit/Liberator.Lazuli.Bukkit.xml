<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Liberator.Lazuli.Bukkit</name>
    </assembly>
    <members>
        <member name="T:Liberator.Lazuli.MinioBuckets.Client.AwsNotifications">
            <summary>
            Base class for adding notifications to AWS
            </summary>
        </member>
        <member name="M:Liberator.Lazuli.MinioBuckets.Client.AwsNotifications.GetAwsNotifications(Liberator.Lazuli.MinioBuckets.Client.LazuliClient,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets notifications from a bucket
            </summary>
            <param name="client">The client for the connection.</param>
            <param name="bucketName">The name of the bucket.</param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns>A BucketNotification object</returns>
        </member>
        <member name="M:Liberator.Lazuli.MinioBuckets.Client.AwsNotifications.SetAwsNotifications(Liberator.Lazuli.MinioBuckets.Client.LazuliClient,System.String,System.Collections.Generic.IEnumerable{Minio.DataModel.NotificationConfiguration},System.Threading.CancellationToken)">
            <summary>
            Sets notifications for a bucket
            </summary>
            <param name="client">The client for the connection.</param>
            <param name="bucketName">The name of the bucket.</param>
            <param name="configurations">Notification configuration list.</param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns>Represents the current stage in the lifecycle of a Task.</returns>
        </member>
        <member name="M:Liberator.Lazuli.MinioBuckets.Client.AwsNotifications.RemoveAllAwsNotifications(Liberator.Lazuli.MinioBuckets.Client.LazuliClient,System.String,System.Threading.CancellationToken)">
            <summary>
            Removes all notifications for a bucket.
            </summary>
            <param name="client">The client for the connection.</param>
            <param name="bucketName">The name of the bucket.</param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns>Represents the current stage in the lifecycle of a Task.</returns>
        </member>
        <member name="T:Liberator.Lazuli.MinioBuckets.Client.BucketMethods">
            <summary>
            Control class for methods pertaining to buckets
            </summary>
        </member>
        <member name="M:Liberator.Lazuli.MinioBuckets.Client.BucketMethods.MakeNewBucket(Liberator.Lazuli.MinioBuckets.Client.LazuliClient,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Makes a new bucket on the client.
            </summary>
            <param name="client">The client for the connection.</param>
            <param name="bucketName">The name of the bucket.</param>
            <param name="region">The region for the client.</param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns>A task status object.</returns>
        </member>
        <member name="M:Liberator.Lazuli.MinioBuckets.Client.BucketMethods.ListBuckets(Liberator.Lazuli.MinioBuckets.Client.LazuliClient,System.Threading.CancellationToken)">
            <summary>
            Lists the buckets on the client.
            </summary>
            <param name="client">The client for the connection.</param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns>A list of Bucket.</returns>
        </member>
        <member name="M:Liberator.Lazuli.MinioBuckets.Client.BucketMethods.DoesBucketExist(Liberator.Lazuli.MinioBuckets.Client.LazuliClient,System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if buckets exist.
            </summary>
            <param name="client">The client for the connection.</param>
            <param name="bucketName">The name of the bucket.</param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns>True if the bucket exists.</returns>
        </member>
        <member name="M:Liberator.Lazuli.MinioBuckets.Client.BucketMethods.RemoveBucket(Liberator.Lazuli.MinioBuckets.Client.LazuliClient,System.String,System.Threading.CancellationToken)">
            <summary>
            Removes a bucket from the client.
            </summary>
            <param name="client">The client for the connection.</param>
            <param name="bucketName">The name of the bucket.</param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns>Represents the current stage in the lifecycle of a Task.</returns>
        </member>
        <member name="M:Liberator.Lazuli.MinioBuckets.Client.BucketMethods.ListObjects(Liberator.Lazuli.MinioBuckets.Client.LazuliClient,System.String,System.String,System.Boolean)">
            <summary>
            Lists the objects within a bucket.
            </summary>
            <param name="client">The client for the connection.</param>
            <param name="bucketName">The name of the bucket.</param>
            <param name="prefix">Filters all objects not beginning with a given prefix.</param>
            <param name="recursive">Set to false to emulate a directory.</param>
        </member>
        <member name="M:Liberator.Lazuli.MinioBuckets.Client.BucketMethods.ListIncompleteUploads(Liberator.Lazuli.MinioBuckets.Client.LazuliClient,System.String,System.String,System.Boolean)">
            <summary>
            Lists all incolmplete uploads for the bucket
            </summary>
            <param name="client">The client for the connection.</param>
            <param name="bucketName">The name of the bucket.</param>
            <param name="prefix">Prefix to list all incomplete uploads.</param>
            <param name="recursive">Option to list incomplete uploads recursively.</param>
        </member>
        <member name="T:Liberator.Lazuli.MinioBuckets.Client.LazuliClient">
            <summary>
            The Client for communication with the bucket
            </summary>
        </member>
        <member name="F:Liberator.Lazuli.MinioBuckets.Client.LazuliClient.minioClient">
            <summary>
            The Minio Client
            </summary>
        </member>
        <member name="M:Liberator.Lazuli.MinioBuckets.Client.LazuliClient.Get(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Gets a client to allow contact with the Minio installation
            </summary>
            <param name="endpoint">The endpoint for the minio installation</param>
            <param name="accessKey">Access Key for authenticated requests (Optional)</param>
            <param name="secretKey">Secret Key for authenticated requests (Optional)</param>
            <param name="region">Optional custom region</param>
            <param name="sessionToken">Optional session token</param>
            <returns>A MinioClient object</returns>
        </member>
        <member name="T:Liberator.Lazuli.MinioBuckets.Client.FileObject">
            <summary>
            Base class for file object methods.
            </summary>
        </member>
        <member name="M:Liberator.Lazuli.MinioBuckets.Client.FileObject.DownloadToFile(Liberator.Lazuli.MinioBuckets.Client.LazuliClient,System.String,System.String,System.String,Minio.DataModel.ServerSideEncryption,System.Threading.CancellationToken)">
            <summary>
            Get an object. The object will be streamed to the callback given by the user.
            </summary>
            <param name="client">The client for the connection.</param>
            <param name="bucketName">Bucket to retrieve object from</param>
            <param name="objectName">Name of object to retrieve</param>
            <param name="fileName">Path to the file.</param>
            <param name="sse">Server-side encryption option.</param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns>A task object representing the request.</returns>
        </member>
        <member name="M:Liberator.Lazuli.MinioBuckets.Client.FileObject.UploadFromFile(Liberator.Lazuli.MinioBuckets.Client.LazuliClient,System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},Minio.DataModel.ServerSideEncryption,System.Threading.CancellationToken)">
            <summary>
            Creates an object from file
            </summary>
            <param name="client">The client for the connection.</param>
            <param name="bucketName">Bucket to retrieve object from</param>
            <param name="objectName">Name of object to retrieve</param>
            <param name="fileName">Path to the file.</param>
            <param name="contentType">The type of content being uploaded.</param>
            <param name="metadata">Metadata for the file.</param>
            <param name="sse">Server-side encryption option.</param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns>A task object representing the request.</returns>
        </member>
        <member name="T:Liberator.Lazuli.MinioBuckets.Client.Object">
            <summary>
            Base class for methods pertaining to objects.
            </summary>
        </member>
        <member name="M:Liberator.Lazuli.MinioBuckets.Client.Object.GetObject(Liberator.Lazuli.MinioBuckets.Client.LazuliClient,System.String,System.String,System.String,Minio.DataModel.ServerSideEncryption,System.Threading.CancellationToken)">
            <summary>
            Gets an object from the client.
            </summary>
            <param name="client">The client for the connection.</param>
            <param name="bucketName">Bucket to retrieve object from</param>
            <param name="objectName">Name of object to retrieve</param>
            <param name="fileName">Path to the file.</param>
            <param name="sse">Server-side encryption option.</param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns>A task object representing the request.</returns>
        </member>
        <member name="M:Liberator.Lazuli.MinioBuckets.Client.Object.GetPartialObject(Liberator.Lazuli.MinioBuckets.Client.LazuliClient,System.String,System.String,System.String,Minio.DataModel.ServerSideEncryption,System.Threading.CancellationToken)">
            <summary>
            Gets a partial object from the client.
            </summary>
            <param name="client">The client for the connection.</param>
            <param name="bucketName">Bucket to retrieve object from</param>
            <param name="objectName">Name of object to retrieve</param>
            <param name="fileName">Path to the file.</param>
            <param name="sse">Server-side encryption option.</param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns>A task object representing the request.</returns>
        </member>
        <member name="M:Liberator.Lazuli.MinioBuckets.Client.Object.StreamToBucket(Liberator.Lazuli.MinioBuckets.Client.LazuliClient,System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},Minio.DataModel.ServerSideEncryption,System.Threading.CancellationToken)">
            <summary>
            Puts an object stream on the client.
            </summary>
            <param name="client">The client for the connection.</param>
            <param name="bucketName">Bucket to retrieve object from</param>
            <param name="objectName">Name of object to retrieve</param>
            <param name="fileName">Path to the file.</param>
            <param name="contentType">Content type for the stream.</param>
            <param name="metaData">Metadata for the streaming object.</param>
            <param name="sse">Server-side encryption option.</param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns>A task object representing the request.</returns>
        </member>
        <member name="M:Liberator.Lazuli.MinioBuckets.Client.Object.GetStatistics(Liberator.Lazuli.MinioBuckets.Client.LazuliClient,System.String,System.String,Minio.DataModel.ServerSideEncryption,System.Threading.CancellationToken)">
            <summary>
            Gets statistics for an object on the server.
            </summary>
            <param name="client">The client for the connection.</param>
            <param name="bucketName">Bucket to retrieve object statistics from</param>
            <param name="bucketObject">Name of object to retrieve statistics for.</param>
            <param name="sse"></param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns>A task object representing the request.</returns>
        </member>
        <member name="M:Liberator.Lazuli.MinioBuckets.Client.Object.RemoveObject(Liberator.Lazuli.MinioBuckets.Client.LazuliClient,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Removes an object from the server.
            </summary>
            <param name="client">The client for the connection.</param>
            <param name="bucketName">Bucket to retrieve object from</param>
            <param name="objectName">Name of object to retrieve</param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns>A task object representing the request.</returns>
        </member>
        <member name="M:Liberator.Lazuli.MinioBuckets.Client.Object.RemoveMultipleObjects(Liberator.Lazuli.MinioBuckets.Client.LazuliClient,System.String,System.Collections.Generic.List{System.String},System.Threading.CancellationToken)">
            <summary>
            Removes multiple objects from the client.
            </summary>
            <param name="client">The client for the connection.</param>
            <param name="bucketName">Bucket to retrieve object from</param>
            <param name="objectsList">The list of objects to remove.</param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns>True if the method completes.</returns>
        </member>
        <member name="M:Liberator.Lazuli.MinioBuckets.Client.Object.CopyObject(Liberator.Lazuli.MinioBuckets.Client.LazuliClient,System.String,System.String,System.String,System.String,Minio.DataModel.ServerSideEncryption,Minio.DataModel.ServerSideEncryption)">
            <summary>
            Copies an object from one bucket to another
            </summary>
            <param name="client">The client for the connection.</param>
            <param name="fromBucketName">Bucket for the source file.</param>
            <param name="fromObjectName">Name of the object to move.</param>
            <param name="destBucketName">Bucket for the destination file.</param>
            <param name="destObjectName">Name of object after the move.</param>
            <param name="sseSrc">Server-side encryption for the source file.</param>
            <param name="sseDest">Server-side encryption for the destination file.</param>
            <returns>A task object representing the request.</returns>
        </member>
        <member name="M:Liberator.Lazuli.MinioBuckets.Client.Object.CopyObjectMetadata(Liberator.Lazuli.MinioBuckets.Client.LazuliClient,System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},Minio.DataModel.ServerSideEncryption,Minio.DataModel.ServerSideEncryption,System.Threading.CancellationToken)">
            <summary>
            Copies an object from one bucket to another with metadata.
            </summary>
            <param name="client">The client for the connection.</param>
            <param name="fromBucketName">Bucket for the source file.</param>
            <param name="fromObjectName">Name of the object to move.</param>
            <param name="destBucketName">Bucket for the destination file.</param>
            <param name="destObjectName">Name of object after the move.</param>
            <param name="metadata"></param>
            <param name="sourceSse">Server-side encryption for the source file.</param>
            <param name="destSse">Server-side encryption for the destination file.</param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns>A task object representing the request.</returns>
        </member>
        <member name="M:Liberator.Lazuli.MinioBuckets.Client.Object.RemoveIncompleteUpload(Liberator.Lazuli.MinioBuckets.Client.LazuliClient,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove an incomplete upload from the client.
            </summary>
            <param name="client">The client for the connection.</param>
            <param name="bucketName">Bucket to retrieve object from</param>
            <param name="objectName">Name of object to retrieve</param>
            <param name="cancellationToken"></param>
            <returns>A task object representing the request.</returns>
        </member>
        <member name="M:Liberator.Lazuli.MinioBuckets.Client.Object.GetPresignedObject(Liberator.Lazuli.MinioBuckets.Client.LazuliClient,System.String,System.String,System.Int32,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Gets a presigned object from the client.
            </summary>
            <param name="client">The client for the connection.</param>
            <param name="bucketName">Bucket to retrieve object from</param>
            <param name="objectName">Name of object to retrieve</param>
            <param name="expiry"></param>
            <param name="reqParams"></param>
            <returns>A task object representing the request.</returns>
        </member>
        <member name="M:Liberator.Lazuli.MinioBuckets.Client.Object.PutPresignedObject(Liberator.Lazuli.MinioBuckets.Client.LazuliClient,System.String,System.String)">
            <summary>
            Puts a presigned object on the client.
            </summary>
            <param name="client">The client for the connection.</param>
            <param name="bucketName">Bucket to retrieve object from</param>
            <param name="objectName">Name of object to retrieve</param>
            <returns>A task object representing the request.</returns>
        </member>
        <member name="T:Liberator.Lazuli.MinioBuckets.Client.Policy">
            <summary>
            Base class for bucket policy operations
            </summary>
        </member>
        <member name="M:Liberator.Lazuli.MinioBuckets.Client.Policy.GetPolicy(Liberator.Lazuli.MinioBuckets.Client.LazuliClient,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the policy stored on the server for the bucket
            </summary>
            <param name="client">The client for the connection.</param>
            <param name="bucketName">The name of the bucket.</param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns>An asynchronous task representing the operation</returns>
        </member>
        <member name="M:Liberator.Lazuli.MinioBuckets.Client.Policy.SetPolicy(Liberator.Lazuli.MinioBuckets.Client.LazuliClient,System.String,System.Threading.CancellationToken)">
            <summary>
            Sets the policy stored on the server for the bucket
            </summary>
            <param name="client">The client for the connection.</param>
            <param name="bucketName">The name of the bucket.</param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns>An asynchronous task representing the operation</returns>
        </member>
        <member name="M:Liberator.Lazuli.MinioBuckets.Client.Policy.PresignedPostPolicy(Liberator.Lazuli.MinioBuckets.Client.LazuliClient,System.String,System.String)">
            <summary>
            Posts a presigned object to the client.
            </summary>
            <param name="client">The client for the connection.</param>
            <param name="bucketName">Bucket to retrieve object from</param>
            <param name="objectName">Name of object to retrieve</param>
            <returns>An asynchronous task representing the operation</returns>
        </member>
        <member name="T:Liberator.Lazuli.MinioBuckets.Exceptions.LazuliBucketException">
            <summary>
            Exception for the Lazuli library
            </summary>
        </member>
        <member name="M:Liberator.Lazuli.MinioBuckets.Exceptions.LazuliBucketException.#ctor(System.String,System.Exception)">
            <summary>
            Exception thrown by the Lazuli library.
            </summary>
            <param name="message">The message to send with the exception</param>
            <param name="e">The inner exception.</param>
        </member>
    </members>
</doc>
